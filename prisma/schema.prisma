// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "cargo prisma"
  output        = "../service/src/generate_prisma"
  module_path   = "generate_prisma"
  client_format = "folder"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev1.db"
}

/// 用户表
model SystemUser {
  id              Int               @id @default(autoincrement())
  /// 账户名称
  username        String            @unique
  /// 用户昵称
  nickname        String            @default("")
  /// 角色ID
  role_id         Int               @default(0)
  /// 部门ID
  dept_id         Int               @default(0)
  /// 手机号
  phone           String            @default("")
  /// 邮箱
  email           String            @default("")
  /// 性别
  sex             Int               @default(1)
  /// 账户密码
  password        String            @default("")
  /// 账户密码salt
  salt            String            @default("")
  /// 用户描述
  describe        String            @default("")
  /// 账户过期
  expire_time     DateTime?
  /// 用户状态
  status          Int               @default(0)
  last_login_ip   String            @default("")
  last_login_time DateTime?
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  deleted_at      DateTime?
  login_log       SystemLoginLog[]
  action_log      SystemActionLog[]
  role            SystemRole?       @relation(fields: [role_id], references: [id])
  dept            SystemDept?       @relation(fields: [dept_id], references: [id])
}

/// 角色表
model SystemRole {
  id         Int              @id @default(autoincrement())
  /// 角色名称
  name       String
  /// 角色标识
  sign       String           @unique
  /// 排序
  sort       Int              @default(0)
  /// 角色描述
  describe   String           @default("")
  /// 角色状态
  status     Int              @default(1)
  created_at DateTime         @default(now())
  updated_at DateTime         @default(now())
  deleted_at DateTime?
  user       SystemUser[]
  role_menu  SystemRoleMenu[]
}

/// 菜单表
model SystemMenu {
  id               Int               @id @default(autoincrement())
  /// 父级ID
  parent_id        Int               @default(0)
  /// 菜单类型：1.菜单，2.重定向，3.外链，4.嵌套，5.按钮权限，6.接口权限
  type             Int               @default(1)
  /// 菜单名称
  title            String
  /// 菜单图标
  icon             String            @default("")
  /// 路由名称 (菜单)
  router_name      String            @default("")
  ///组件路径 (菜单)
  router_component String            @default("")
  /// 路由路径 (菜单)
  router_path      String            @default("")
  /// 路由重定向 (重定向)
  redirect         String            @default("")
  /// 外链地址 (外链)
  link             String            @default("")
  /// 内嵌地址 (嵌套)
  iframe           String            @default("")
  /// 权限标识 (按钮权限)
  btn_auth         String            @default("")
  /// 接口地址 (接口权限)
  api_url          String            @default("")
  /// 请求方法 (接口权限)
  api_method       String            @default("")
  /// 是否隐藏
  is_hide          Int               @default(0)
  /// 页面缓存
  is_keep_alive    Int               @default(1)
  /// 是否固定
  is_affix         Int               @default(0)
  /// 菜单排序
  sort             Int               @default(0)
  created_at       DateTime          @default(now())
  updated_at       DateTime          @updatedAt
  deleted_at       DateTime?
  role_menu        SystemRoleMenu[]
  action_log       SystemActionLog[]
}

model SystemRoleMenu {
  id         Int        @id @default(autoincrement())
  role_id    Int
  menu_id    Int
  deleted_at DateTime?
  role       SystemRole @relation(fields: [role_id], references: [id])
  menu       SystemMenu @relation(fields: [menu_id], references: [id])

  @@unique([role_id, menu_id])
}

/// 部门表
model SystemDept {
  id           Int          @id @default(autoincrement())
  /// 父级ID
  parent_id    Int          @default(0)
  /// 部门名称
  name         String
  /// 负责人姓名
  person_name  String       @default("")
  /// 负责人电话
  person_phone String       @default("")
  /// 负责人邮箱
  person_email String       @default("")
  /// 部门描述
  describe     String       @default("")
  /// 角色状态
  status       Int          @default(1)
  /// 菜单排序
  sort         Int          @default(0)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  deleted_at   DateTime?
  user         SystemUser[]
}

/// 字典表
model SystemDict {
  id         Int              @id @default(autoincrement())
  /// 名称
  name       String
  /// 标识
  sign       String
  remark     String           @default("")
  /// 状态
  status     Int              @default(1)
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt
  deleted_at DateTime?
  dict_data  SystemDictData[]
}

/// 字典数据表
model SystemDictData {
  id         Int        @id @default(autoincrement())
  /// 字典ID
  dict_id    Int
  /// 名称
  label      String
  /// 标识
  value      Int
  remark     String     @default("")
  /// 状态
  status     Int        @default(1)
  /// 排序
  sort       Int        @default(0)
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted_at DateTime?
  dict       SystemDict @relation(fields: [dict_id], references: [id])
}

/// 登录记录表
model SystemLoginLog {
  id              Int        @id @default(autoincrement())
  /// 登录类型
  type            Int        @default(1)
  /// 管理员ID
  user_id         Int
  /// 登录的IP地址
  ip_address      String
  /// 登录的IP地址名称
  ip_address_name String     @default("")
  /// 登录使用的浏览器user-agent
  browser_agent   String     @default("")
  /// 登录的日期时间
  created_at      DateTime   @default(now())
  user            SystemUser @relation(fields: [user_id], references: [id])
}

/// 操作记录表
model SystemActionLog {
  id              Int        @id @default(autoincrement())
  /// 管理员ID
  user_id         Int
  /// 操作的菜单ID
  menu_id         Int
  /// 完整的菜单名称
  menu_names      String     @default("")
  /// 操作时的IP地址
  ip_address      String
  /// 操作时的IP地址名称
  ip_address_name String     @default("")
  /// 操作时的浏览器user-agent
  browser_agent   String     @default("")
  /// 操作时的日期时间
  created_at      DateTime   @default(now())
  user            SystemUser @relation(fields: [user_id], references: [id])
  menu            SystemMenu @relation(fields: [menu_id], references: [id])
}

/// 缓存表
model SystemCache {
  id         Int       @id @default(autoincrement())
  /// 唯一键
  key        String
  /// 类型
  type       Int
  /// value
  value      String
  /// 附加字符
  attach     String    @default("")
  /// 到期时间
  valid_time DateTime?
  /// 创建时间
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  @@unique([key, type])
}

/// 用户表
model Member {
  id              Int          @id @default(autoincrement())
  /// 唯一标识编号（可用作邀请码）
  unique_code     String       @unique
  /// 用户邮箱
  email           String       @unique
  /// 手机号码
  mobile          String       @default("")
  /// 昵称
  nickname        String       @default("")
  /// 头像
  avatar          String       @default("")
  /// 密码
  password        String       @default("")
  /// 账户密码salt
  salt            String       @default("")
  /// 性别
  sex             Int          @default(1)
  /// 余额
  balance         Decimal      @default(0.00)
  /// 积分
  integral        Int          @default(0)
  /// 备注
  remark          String       @default("")
  /// 状态
  status          Int          @default(1)
  /// 推广权限
  is_promoter     Int          @default(1)
  /// 最后登录IP
  last_login_ip   String       @default("")
  /// 最后登录时间
  last_login_time DateTime?
  /// 注册时间
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  deleted_at      DateTime?
  team_owner      MemberTeam[] @relation("owner")
  team_parent     MemberTeam[] @relation("parent")
  team_user       MemberTeam[] @relation("member")
  bill            MemberBill[]
}

/// 用户推广表
model MemberTeam {
  id         Int       @id @default(autoincrement())
  /// 团队所属用户ID
  owner_uid  Int
  /// 推广用户ID
  parent_uid Int
  /// 被推广用户ID
  member_id  Int
  /// 被推广用户在团队的级别
  level      Int       @default(0)
  /// 推广时间
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  owner      Member    @relation(name: "owner", fields: [owner_uid], references: [id])
  parent     Member    @relation(name: "parent", fields: [parent_uid], references: [id])
  member     Member    @relation(name: "member", fields: [member_id], references: [id])
}

/// 用户资金账单表
model MemberBill {
  id         Int       @id @default(autoincrement())
  /// 用户ID
  member_id  Int
  /// 种类
  type       Int
  /// 类型：0.减少，1.增加
  pm         Int       @default(1)
  /// 额度
  number     Decimal   @default(0.00)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  member     Member    @relation(fields: [member_id], references: [id])
}
