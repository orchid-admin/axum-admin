// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider    = "cargo prisma"
  output      = "../service/src/prisma.rs"
  module_path = "prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

/// 用户表
model SystemUser {
  id          Int         @id @default(autoincrement())
  /// 账户名称
  username    String      @unique
  /// 用户昵称
  nickname    String      @default("")
  /// 角色ID
  role_id     Int?
  role        SystemRole? @relation(fields: [role_id], references: [id])
  /// 部门ID
  dept_id     Int?
  dept        SystemDept? @relation(fields: [dept_id], references: [id])
  /// 手机号
  phone       String      @default("")
  /// 邮箱
  email       String      @default("")
  /// 性别
  sex         Int         @default(1)
  /// 账户密码
  password    String      @default("")
  /// 账户密码salt
  salt        String      @default("")
  /// 账户过期
  expire_time DateTime?
  /// 用户状态
  status      Boolean     @default(true)
  /// 用户描述
  describe    String      @default("")
  created_at  DateTime    @default(now())
  updated_at  DateTime    @default(now())
  deleted_at  DateTime?
}

/// 角色表
model SystemRole {
  id             Int              @id @default(autoincrement())
  /// 角色名称
  name           String
  /// 角色标识
  sign           String           @unique
  /// 排序
  sort           Int              @default(0)
  /// 角色描述
  describe       String           @default("")
  /// 角色状态
  status         Boolean          @default(true)
  created_at     DateTime         @default(now())
  updated_at     DateTime         @default(now())
  deleted_at     DateTime?
  SystemUser     SystemUser[]
  SystemRoleMenu SystemRoleMenu[]
}

/// 菜单表
model SystemMenu {
  id                 Int              @id @default(autoincrement())
  /// 父级ID
  parent_id          Int              @default(0)
  /// 菜单类型：menu.菜单，btn.按钮
  type               String           @default("menu")
  /// 路由名称
  router_name        String           @default("")
  ///组件路径
  component          String           @default("")
  /// 是否外链
  is_link            Boolean          @default(false)
  /// 路由路径
  path               String           @default("")
  /// 路由重定向
  redirect           String           @default("")
  /// 菜单名称
  meta_title         String
  /// 菜单图标
  meta_icon          String           @default("")
  /// 是否隐藏
  meta_is_hide       Boolean          @default(false)
  /// 页面缓存
  meta_is_keep_alive Boolean          @default(true)
  /// 是否固定
  meta_is_affix      Boolean          @default(false)
  /// 链接地址
  meta_link          String           @default("")
  /// 是否内嵌
  meta_is_iframe     Boolean          @default(false)
  /// 权限标识
  btn_power          String           @default("")
  /// 菜单排序
  sort               Int              @default(0)
  created_at         DateTime         @default(now())
  updated_at         DateTime         @default(now())
  deleted_at         DateTime?
  SystemRoleMenu     SystemRoleMenu[]
}

model SystemRoleMenu {
  id         Int        @id @default(autoincrement())
  role       SystemRole @relation(fields: [role_id], references: [id])
  menu       SystemMenu @relation(fields: [menu_id], references: [id])
  role_id    Int
  menu_id    Int
  deleted_at DateTime?
}

/// 部门表
model SystemDept {
  id           Int          @id @default(autoincrement())
  /// 父级ID
  parent_id    Int          @default(0)
  /// 部门名称
  name         String
  /// 负责人姓名
  person_name  String       @default("")
  /// 负责人电话
  person_phone String       @default("")
  /// 负责人邮箱
  person_email String       @default("")
  /// 部门描述
  describe     String       @default("")
  /// 角色状态
  status       Boolean      @default(true)
  /// 菜单排序
  sort         Int          @default(0)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @default(now())
  deleted_at   DateTime?
  SystemUser   SystemUser[]
}

model SystemDict {
  id         Int       @id @default(autoincrement())
  /// 名称
  name       String
  /// 标识
  field      String
  /// 值：[{"value": "", "label": ""}]
  value      String
  /// 状态
  status     Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
}
